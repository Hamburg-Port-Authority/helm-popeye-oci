#configuration for cronjob
cronJob:
  # https://crontab.guru/#*_*/1_*_*_*
  # “At every minute past every hour.” 
  schedule: "* */1 * * *"
  history:
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 1
  image:
    repository: derailed/popeye
    pullPolicy: IfNotPresent
  imagePullSecrets: {}
  nodeSelector: {}
  affinity: {}
  tolerations: {}
  securityContext: {}
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # runAsNonRoot: true
    # seccompProfile:
    #   type: RuntimeDefault
  

  containerConfiguration:
    # https://github.com/derailed/popeye?tab=readme-ov-file#output-formats
    # possible formats: standard, jurassic, yaml, html, json, junit, prometheus, score
    outputFormat: standard
    prometheus:
      address: ""
      basicAuth:
        # set to true if arguments should be tempalted
        enabled: false
        user: ""
        password: ""


#configuration for job started by cronjob
job:
  securityContext: {}
    # allowPrivilegeEscalation: false
    # runAsNonRoot: true
    # runAsUser: 1000
    # runAsGroup: 1000
    # seccompProfile:
    #   type: RuntimeDefault
    # capabilities:
    #   drop:
    #     - ALL
  resources: {}
    # limits:
    #   cpu: 150m
    #   memory: 100Mi
    # requests:
    #   cpu: 50m
    #   memory: 30Mi


popeyeConfigugration: {}
#===
# An example configuration cloned from: https://github.com/derailed/popeye/blob/master/spinach-examples/spinach_eks.yml
#==
# A Sample EKS Popeye configuration.
# popeye:
#   allocations:
#     cpu:
#       # Checks if cpu is under allocated by more than 200% at current load.
#       underPercUtilization: 200
#       # Checks if cpu is over allocated by more than 50% at current load.
#       overPercUtilization: 50
#     memory:
#       # Checks if mem is under allocated by more than 200% at current load.
#       underPercUtilization: 200
#       # Checks if mem is over allocated by more than 50% at current load.
#       overPercUtilization: 50
#   # Excludes define rules to exempt resources from sanitization
#   excludes:
#     global:
#       fqns: [rx:^kube-system,rx:^local-path-storage]
#     linters:
#       clusterroles:
#         instances:
#         - fqns: [rx:^eks,rx:^aws-node,rx:^system,admin,edit,view,cluster-admin]
#           codes: [400]
#   resources:
#     # Nodes specific sanitization
#     node:
#       limits:
#         cpu: 90
#         memory: 80
#     # Pods specific sanitization
#     pod:
#       limits:
#         # Fail if cpu is over 80%
#         cpu: 80
#         # Fail if pod mem is over 75%
#         memory: 75
#       # Fail if more than 3 restarts on any pods
#       restarts: 3
#   # Code specifies a custom severity level ie critical=3, warn=2, info=1
#   overrides:
#     - codes: 206
#       severity: 1